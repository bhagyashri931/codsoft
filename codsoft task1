Task 1 : To do list
import tkinter as tk
from tkinter import messagebox, simpledialog

class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append({'task': task, 'completed': False})

    def update_task(self, task_id, new_task):
        if 0 <= task_id < len(self.tasks):
            self.tasks[task_id]['task'] = new_task
        else:
            messagebox.showerror("Error", "Task not found")

    def delete_task(self, task_id):
        if 0 <= task_id < len(self.tasks):
            del self.tasks[task_id]
        else:
            messagebox.showerror("Error", "Task not found")

    def mark_complete(self, task_id):
        if 0 <= task_id < len(self.tasks):
            self.tasks[task_id]['completed'] = True
        else:
            messagebox.showerror("Error", "Task not found")

    def view_tasks(self):
        tasks_str = ""
        for i, task in enumerate(self.tasks):
            status = "Done" if task['completed'] else "Pending"
            tasks_str += f"{i + 1}. {task['task']} [{status}]\n"
        return tasks_str

def add_task_gui():
    task = simpledialog.askstring("Input", "Enter a task:")
    if task:
        todo_list.add_task(task)
        messagebox.showinfo("Info", "Task added successfully!")
    else:
        messagebox.showwarning("Warning", "Task cannot be empty.")

def update_task_gui():
    task_id = simpledialog.askinteger("Input", "Enter the task ID to update:") - 1
    if task_id is not None:
        new_task = simpledialog.askstring("Input", "Enter the new task:")
        if new_task:
            todo_list.update_task(task_id, new_task)
            messagebox.showinfo("Info", "Task updated successfully!")
        else:
            messagebox.showwarning("Warning", "New task cannot be empty.")
    else:
        messagebox.showerror("Error", "Invalid task ID.")

def delete_task_gui():
    task_id = simpledialog.askinteger("Input", "Enter the task ID to delete:") - 1
    if task_id is not None:
        todo_list.delete_task(task_id)
        messagebox.showinfo("Info", "Task deleted successfully!")
    else:
        messagebox.showerror("Error", "Invalid task ID.")

def mark_complete_gui():
    task_id = simpledialog.askinteger("Input", "Enter the task ID to mark as complete:") - 1
    if task_id is not None:
        todo_list.mark_complete(task_id)
        messagebox.showinfo("Info", "Task marked as complete!")
    else:
        messagebox.showerror("Error", "Invalid task ID.")

def view_tasks_gui():
    tasks = todo_list.view_tasks()
    if tasks:
        messagebox.showinfo("Tasks", tasks.strip())
    else:
        messagebox.showinfo("Tasks", "No tasks available.")

def main_gui():
    root = tk.Tk()
    root.title("ToDo List")

    tk.Label(root, text="ToDo List", font=("Helvetica", 16)).pack(pady=10)

    tk.Button(root, text="Add Task", command=add_task_gui).pack(pady=10)
    tk.Button(root, text="Update Task", command=update_task_gui).pack(pady=10)
    tk.Button(root, text="Delete Task", command=delete_task_gui).pack(pady=10)
    tk.Button(root, text="Mark as Complete", command=mark_complete_gui).pack(pady=10)
    tk.Button(root, text="View Tasks", command=view_tasks_gui).pack(pady=10)
    tk.Button(root, text="Exit", command=root.quit).pack(pady=10)

    root.mainloop()

if __name__ == "__main__":
    todo_list = ToDoList()
    main_gui()

           
        


                    
